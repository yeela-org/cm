# -*- mode: yaml -*-
manifest:
  version: 1.0
automations:
  # Add a label that indicates how many minutes it will take to review the PR.
  estimated_time_to_review: 
    if:
      - true
    run:
      - action: add-label@v1
      # etr is defined in the last section of this example
        args:
          label: "{{ calc.etr }} min review"
          color: {{ 'E94637' if (calc.etr >= 20) else ('FBBD10' if (calc.etr >= 5) else '36A853') }}
  # Triggered for PRs that don't have either a Jira ticket number in the title,
  # or a link to a Jira ticket in the PR description.
  label_missing_jira_info:
    if:
      - {{ not (has.jira_ticket_in_title or has.jira_ticket_in_desc) }}
    run:
      - action: add-label@v1
        args:
          label: "missing-jira"
          color: 'F6443B'
  # Triggered for any changes that only affect formatting, documentation or tests
  safe_changes:
    if:
      - {{ is.formatting or is.docs or is.tests }}
    run:
      - action: add-label@v1
        args:
          label: "safe-changes"
  # Post a comment that lists the best experts for the files that were modified.
  explain_code_experts:
    if:
      - true
    run:
      - action: explain-code-experts@v1 
        args:
          gt: 10
  # Assign data team to review database modifications. 
  review_data_schema_changes:
    if:
      - {{ files | match(regex=r/src\/database\/.*/) | some }}
      - {{ repo.name | match(list=['express']) }}
    run:
      - action: add-reviewers@v1
        args:
          reviewers: [<org-name>/data-team]
      - action: add-comment@v1
        args:
          comment: |
            This PR affects one or more data model files which may impact data pipelines. Adding Data Team to reviewers.
  # Require QA on all PRs not including hotfixes
  qa_required_approval:
    if:
      - {{ not is.hotfix }} 
      - {{ is.qa_required }}
    run:
      - action: add-reviewers@v1
        args:
          reviewers: [<org-name>/qa]
      - action: require-reviewers@v1
        args:
          reviewers: [<org-name>/qa]
          also_assign: false
  # Add QA on all PRs (not required)
  qa_approval:
    if:
      - {{ not is.hotfix }} 
      - {{ not is.qa_required }}
    run:
      - action: add-reviewers@v1
        args:
          reviewers: [<org-name>/qa]
  # Require TL or QA approval on all hotfix PRs and label them
  hotfix_required_approval:
    if:
      - {{ is.hotfix }} 
    run:
      - action: add-reviewers@v1
        args:
          reviewers: [<org-name>/team-leads, <org-name>/qa]
      - action: require-reviewers@v1
        args:
          reviewers: [<org-name>/team-leads, <org-name>/qa]
          also_assign: false
      - action: add-label@v1
        args:
          label: "hotfix"
          color: "#d73a4a"
  platform_team_required_approval:
    if:
      - {{ files | match(list=pipeline_files) | some }}
    run:
      - action: require-reviewers@v1
        args:
          reviewers: [<org-name>/platform]
      - action: add-comment@v1
        args:
          comment: |
            This PR affects a deployment pipeline. Adding Platform Team as a required reviewer.
  

# The next function calculates the estimated time to review and makes it available in the automation above.
calc:
  etr: {{ branch | estimatedReviewTime }}
has:
  jira_ticket_in_title: {{ pr.title | includes(regex=r/\b[A-Za-z]+-\d+\b/) }}
  jira_ticket_in_desc: {{ pr.description | includes(regex=r/atlassian.net\/browse\/\w{1,}-\d{3,4}/) }}
is:
  formatting: {{ source.diff.files | isFormattingChange }}
  docs: {{ files | allDocs }}
  tests: {{ files | allTests }}
  hotfix: {{ branch.name | match(regex=r/hotfix.*/) }}
  qa_required: {{ repo.name | match(list=['express','api']) }}
pipeline_files:
  - .circleci/
  - .github/
